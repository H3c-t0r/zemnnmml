# Use Ubuntu as the base image
FROM ubuntu:latest

# Set environment variables to make Python outputs work correctly in Docker
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100

# Install Python 3.10 and pip, git, and other essential tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    python3.10-venv \
    python3-pip \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.10 as the default python version
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 \
    && update-alternatives --set python3 /usr/bin/python3.10

# Clone the ZenML repository
RUN git clone https://github.com/zenml-io/zenml.git /zenml

# Checkout the specific branch
RUN cd /zenml && git checkout feature/OSSK-13-upgrading-sqlmodel

RUN pip install uv
RUN uv venv
RUN /bin/bash -c ". .venv/bin/activate"

# Install the ZenML package locally using uv
# Assuming `uv` is correctly configured to handle local directory installations
RUN uv pip install 'zenml[server,templates,terraform,secrets-aws,secrets-gcp,secrets-azure,secrets-hashicorp,s3fs,gcsfs,adlfs,dev,mlstacks]'


# Export the requirements for specific ZenML integrations, ignoring some
RUN . .venv/bin/activate && zenml integration export-requirements --output-file integration-requirements.txt --ignore-integration feast --ignore-integration label_studio --ignore-integration bentoml --ignore-integration seldon --ignore-integration kserve --ignore-integration pycaret --ignore-integration skypilot_aws --ignore-integration skypilot_gcp --ignore-integration skypilot_azure --ignore-integration kubeflow --ignore-integration tekton --ignore-integration gcp

# Install the exported requirements
RUN uv pip install -r integration-requirements.txt

# Set the default command for the container to keep it running.
CMD ["tail", "-f", "/dev/null"]
