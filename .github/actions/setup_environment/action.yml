---
name: Install ZenML
description: Install ZenML, most integrations, loads/uploads cached venv and pip download
  cache if applicable
inputs:
  cache_version:
    description: Value gets appended to the cache key and will therefore invalidate
      the cache if it changes
    required: true
  python-version:
    description: Python version
    type: string
    required: true
  os:
    description: OS
    type: string
    required: true
  install_integrations:
    description: Install ZenML integrations
    type: string
    required: false
    default: 'yes'
  runners_cache_access_key_id:
    description: Runner cache AWS access key ID
    required: true
  runners_cache_secret_access_key:
    description: Runner cache AWS secret access key
    required: true
  discord_webhook:
    description: Discord webhook URL
    required: true
runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5.0.0
      with:
        python-version: ${{ inputs.python-version }}
    - name: Create and activate a virtual environment (Windows)
      shell: bash
      if: ${{ runner.os == 'Windows' }}
      # uv doesn't (yet) allow us to install packages globally;
      # we have to create and activate a virtual environment
      run: |
        irm https://astral.sh/uv/install.ps1 | iex
        uv venv .venv
        "VIRTUAL_ENV=.venv" | Out-File -FilePath $env:GITHUB_ENV -Append
        "$PWD/.venv/Scripts" | Out-File -FilePath $env:GITHUB_PATH -Append
    - name: Create and activate a virtual environment (Unix)
      shell: bash
      if: ${{ runner.os != 'Windows' }}
      # uv doesn't (yet) allow us to install packages globally;
      # we have to create and activate a virtual environment
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv venv .venv
        echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
        echo "$PWD/.venv/bin" >> $GITHUB_PATH
    - name: Delete error-causing bash
      shell: bash
      if: ${{ inputs.os == 'windows-latest' }}
      run: rm.exe "C:/WINDOWS/system32/bash.EXE"
    - name: Set path to bash for example runner
      shell: bash
      if: ${{ inputs.os == 'windows-latest' }}
      run: |
        echo "SHELL_EXECUTABLE=C:\Program Files\Git\bin\bash.exe" >> $GITHUB_ENV
    - name: Configure git (non-Windows)
      if: ${{ inputs.os != 'windows-latest' }}
      shell: bash
      run: |
        git config --global user.email "info@zenml.io"
        git config --global user.name "ZenML GmbH"
    - name: Configure git (Windows)
      if: ${{ inputs.os == 'windows-latest' }}
      shell: bash
      run: |
        "C:\Program Files\Git\bin\git.exe" config --global user.email "info@zenml.io"
        "C:\Program Files\Git\bin\git.exe" config --global user.name "ZenML GmbH"
    - name: Install Terraform (Windows)
      if: ${{ inputs.os == 'windows-latest' }}
      shell: bash
      run: choco install terraform -y
    - name: Install Terraform (Mac)
      if: ${{ inputs.os == 'macos-latest' }}
      shell: bash
      run: |
        brew tap hashicorp/tap
        brew install hashicorp/tap/terraform
    - name: Install ZenML and dependencies
      shell: bash
      run: |
        scripts/install-zenml-dev.sh --integrations ${{ inputs.install_integrations }}
    - name: Check Python environment
      shell: bash
      run: |-
        zenml integration list
        pip list
        pip check || true
