---
name: Slow CI
on:
  workflow_dispatch:
  workflow_call:
  issue_comment:
    types: [created]
env:
  TEAM_MEMBERS: '["@htahir1", "@hamza-zenml", "@bcdurak", "@baris-zenml", "@michael-zenml",
    "@schustmi", "@strickvl", "@alex-zenml", "@alexej-zenml", "@AlexejPenner", "@stefannica",
    "@wjayesh", "@safoinme", "@Cahllagerfeld", "@avishniakov", "@atzin-escandia"]'
concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  check-membership:
    runs-on: ubuntu-latest
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
      (github.event_name == 'workflow_dispatch')
    outputs:
      member_check: ${{ steps.is_member.outputs.member_check }}
    steps:
      - name: Check if commenter is a team member
        id: is_member
        run: |
          if echo ${{ env.TEAM_MEMBERS }} | grep -q "${{ github.event.comment.user.login }}"; then
            echo "::set-output name=member_check::true"
          else
            echo "::set-output name=member_check::false"
          fi
  comment-workflow-link:
    runs-on: ubuntu-latest
    if: (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest'))
    steps:
      - name: Post Comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Triggered Slow CI: [Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          reactions: rocket
  docstring-check:
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
        (github.event_name == 'workflow_dispatch')
      )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'
      - name: Install current package as editable
        run: pip install -U darglint
      - name: Check docstrings
        run: bash scripts/docstring.sh
  sqlite-db-migration-testing:
    runs-on: ubuntu-dind-runners
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
        (github.event_name == 'workflow_dispatch')
      )
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Set up Python 3.9
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.9'
      - name: Test migrations across versions
        run: bash scripts/test-migrations-mysql.sh sqlite
  small-checks:
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
        (github.event_name == 'workflow_dispatch')
      )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.8'
      - name: Install current package as editable
        run: |
          pip install -U pip
          pip install -e .
      - name: Install mlstacks package
        run: pip install mlstacks
      - name: Check for broken dependencies
        run: pip check
      - name: Markdown link check
        uses: gaurav-nelson/github-action-markdown-link-check@1.0.15
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'no'
          folder-path: ./examples, ./docs/book, ./src
          file-path: ./README.md, ./LICENSE, ./RELEASE_NOTES.md, CODE-OF-CONDUCT.md,
            CONTRIBUTING.md, CLA.md, RELEASE_NOTES.md, ROADMAP.md
          config-file: .github/workflows/markdown_check_config.json
        continue-on-error: true
      - name: Security check
        run: |
          pip install bandit
          bash scripts/check-security.sh
      - name: Check for alembic branch divergence
        env:
          ZENML_DEBUG: 0
        run: |
          pip install alembic
          bash scripts/check-alembic-branches.sh
  update-templates-to-examples:
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) && github.event.pull_request.head.repo.full_name == github.repository
      ||
        (github.event_name == 'workflow_dispatch') ||
        (github.event_name == 'workflow_call')
      )
    # this doesn't work on forked repositories (i.e. outside contributors)
    # so we disable template updates for those PRs / branches
    uses: ./.github/workflows/update-templates-to-examples.yml
    with:
      python-version: '3.8'
      os: ubuntu-latest
    secrets: inherit
  custom-ubuntu-unit-test:
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
        (github.event_name == 'workflow_dispatch')
      )
    strategy:
      matrix:
        os: [ubuntu-dind-runners]
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: false
    uses: ./.github/workflows/unit-test.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}
    secrets: inherit
  windows-unit-test:
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
        (github.event_name == 'workflow_dispatch')
      )
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: false
    uses: ./.github/workflows/unit-test.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}
    secrets: inherit
  macos-unit-test:
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
        (github.event_name == 'workflow_dispatch')
      )
    strategy:
      matrix:
        os: [macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: false
    uses: ./.github/workflows/unit-test.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}
    secrets: inherit
  windows-integration-test:
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
        (github.event_name == 'workflow_dispatch')
      )
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        test_environment: [default]
      fail-fast: false
    uses: ./.github/workflows/integration-test-slow.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      test_environment: ${{ matrix.test_environment }}
      is-slow-ci: true
    secrets: inherit
  macos-integration-test:
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
        (github.event_name == 'workflow_dispatch')
      )
    strategy:
      matrix:
        os: [macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        test_environment: [default]
      fail-fast: false
    uses: ./.github/workflows/integration-test-slow.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      test_environment: ${{ matrix.test_environment }}
      is-slow-ci: true
    secrets: inherit
  custom-ubuntu-integration-test:
    needs: check-membership
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      needs.check-membership.outputs.member_check == 'true' &&
      (
        (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
        (github.event_name == 'workflow_dispatch')
      )
    strategy:
      matrix:
        os: [ubuntu-dind-runners]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        test_environment:
          - default
          - docker-server-docker-orchestrator-mysql
          - docker-server-docker-orchestrator-mariadb
        exclude:
          # docker is time-consuming to run, so we only run it on 3.8
          - test_environment: docker-server-docker-orchestrator-mysql
            python-version: '3.9'
          - test_environment: docker-server-docker-orchestrator-mysql
            python-version: '3.10'
          - test_environment: docker-server-docker-orchestrator-mysql
            python-version: '3.11'
          - test_environment: docker-server-docker-orchestrator-mariadb
            python-version: '3.9'
          - test_environment: docker-server-docker-orchestrator-mariadb
            python-version: '3.10'
          - test_environment: docker-server-docker-orchestrator-mariadb
            python-version: '3.11'
      fail-fast: false
    uses: ./.github/workflows/integration-test-slow.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      test_environment: ${{ matrix.test_environment }}
      is-slow-ci: true
    secrets: inherit
  post-ready-to-merge-comment:
    runs-on: ubuntu-latest
    needs:
      - check-membership
      - comment-workflow-link
      - small-checks
      - sqlite-db-migration-testing
      - custom-ubuntu-unit-test
      - windows-unit-test
      - macos-unit-test
      - windows-integration-test
      - macos-integration-test
      - custom-ubuntu-integration-test
      - update-templates-to-examples
      - docstring-check
    # if team member commented, not a draft, on a PR, using /fulltest
    if: >
      (github.event_name == 'issue_comment' && github.event.issue.pull_request &&
      github.event.pull_request.draft == false && contains(github.event.comment.body,
      '/fulltest')) ||
      (github.event_name == 'workflow_dispatch')
    steps:
      - name: Post Comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            🦭 All tests passed!
            You are ready to merge this PR. 🚀
          reactions: rocket
