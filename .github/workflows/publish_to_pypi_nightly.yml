---
name: Publish Nightly PyPI package
on:
  workflow_call:
    inputs:
      nightly-version:
        description: The nightly version to use
        required: true
        type: string
jobs:
  publish_to_pypi:
    name: Publish Nightly Python 🐍 package 📦 to PyPI
    runs-on: ubuntu-latest
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
      PYTHONIOENCODING: utf-8
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          ref: develop
      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.8'
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Modify pyproject.toml for nightly release
        run: |
          # Change the package name to `zenml-nightly`
          sed -i 's/name = "zenml"/name = "zenml-nightly"/' pyproject.toml

          # Update the version to the nightly version
          poetry version ${{ inputs.nightly-version }}

          # Update the src/zenml/VERSION file with the nightly version
          echo ${{ inputs.nightly-version }} > src/zenml/VERSION
      - name: Include latest dashboard
        run: bash scripts/install-dashboard.sh
      - name: Build package
        run: poetry build
      - name: Mint token
        id: mint
        uses: tschm/token-mint-action@v1.0.2
      - name: Publish the package with poetry
        run: |-
          # Extract the tag from GITHUB_REF if it exists
          TAG=$(echo ${GITHUB_REF} | sed 's|refs/tags/||g')

          # Check if the current ref is a tag
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            # Check if the VERSION file matches the tag
            if [ "$(cat src/zenml/VERSION)" = "$TAG" ]; then
              poetry publish -u __token__ -p '${{ steps.mint.outputs.api-token }}';
            else
              echo "Version mismatch between src/zenml/VERSION and branch tag" && exit 1;
            fi
          else
            # For branches, publish the nightly version without version check
            poetry publish -u __token__ -p '${{ steps.mint.outputs.api-token }}';
          fi
