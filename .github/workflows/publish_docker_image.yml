---
name: Publish Docker images
on:
  workflow_call:
    inputs:
      config_file:
        description: YAML config for Google Cloud Build
        required: false
        type: string
        default: release-cloudbuild.yaml
  push:
    branches:
      - cloud/send-workflow-dispatch-on-release

jobs:
  # publish_to_docker:
  #   name: Publish Docker üêã image üñºÔ∏è to Dockerhub
  #   runs-on: ubuntu-latest
  #   env:
  #     ZENML_DEBUG: 1
  #     ZENML_ANALYTICS_OPT_IN: false
  #     PYTHONIOENCODING: utf-8
  #   steps:
  #     - uses: actions/checkout@v4.1.1
  #     - name: Get the version from the github tag ref
  #       id: get_version
  #       run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

  #     # Setup gcloud CLI
  #     - uses: google-github-actions/setup-gcloud@v0
  #       with:
  #         service_account_email: ${{ secrets.GCP_CLOUDBUILD_EMAIL }}
  #         service_account_key: ${{ secrets.GCP_CLOUDBUILD_KEY }}
  #         project_id: ${{ secrets.GCP_CLOUDBUILD_PROJECT }}

  #     # Cloudbuild
  #     - name: Build docker images
  #       run: |-
  #         gcloud builds submit \
  #           --quiet \
  #           --config=${{inputs.config_file}} \
  #           --substitutions=TAG_NAME=${{github.ref_name}} .
  # wait-for-package-release:
  #   runs-on: arc-runner-set
  #   needs: publish_to_docker
  #   steps:
  #     - name: Sleep for 4 minutes
  #       run: sleep 240
  #       shell: bash

  # create a tag on the ZenML cloud plugins repo
  create_tag_on_cloud_plugins_repo:
    runs-on: ubuntu-latest
    permissions: write-all
    # needs: wait-for-package-release
    steps:
      - name: Create a tag on ZenML Cloud plugins repo
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CLOUD_PLUGINS_REPO_PAT }}
          script: |-
            await github.rest.git.createRef({
              owner: 'zenml-io',
              repo: 'zenml-cloud-plugins',
              ref: 'refs/tags/testtag',
              sha: '${{github.sha}}'
            })
