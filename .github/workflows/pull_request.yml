name: Testing

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  testing:
    runs-on: ${{ matrix.os }}
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
    # Exit if its a commit from Gitbook
    if: ${{ ! startsWith(github.event.head_commit.message, 'GitBook:') }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Linux System Dependencies
        if: runner.os=='Linux'
        run: sudo apt install graphviz

      - name: Install MacOS System Dependencies
        if: runner.os=='macOS'
        run: brew install graphviz

      - name: Install Windows System Dependencies
        if: runner.os=='Windows'
        run: choco install graphviz

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install "poetry"

      - name: Delete error-causing bash
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          rm.exe "C:/WINDOWS/system32/bash.EXE"

      - name: Install Dependencies
        run: |
          python -m poetry install
          python -m poetry run zenml integration install airflow -f
          python -m poetry run zenml integration install pytorch -f
          python -m poetry run zenml integration install gcp -f
          python -m poetry run pip install click~=8.0.3

      - name: Lint
        run: |
          python -m poetry run bash scripts/lint.sh

      - name: Test
        run: python -m poetry run bash scripts/test-coverage-xml.sh unit

      - name: Upload coverage
        # only do it for python 3.6, we don't need to do it for every version
        if: ${{ matrix.python-version == '3.8' && matrix.os == 'ubuntu-latest' }}
        uses: codecov/codecov-action@v2
