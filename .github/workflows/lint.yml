name: Code Linting, Formatting, and Type Checking

on:
  workflow_call:
    inputs:
      os:
        description: 'OS'
        type: string
        required: true
      python-version:
        description: 'Python version'
        type: string
        required: true

  workflow_dispatch:
    inputs:
      os:
        description: 'OS'
        type: choice
        options: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
        required: false
        default: 'ubuntu-latest'
      python-version:
        description: 'Python version'
        type: choice
        options:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        required: false
        default: '3.8'

jobs:
  lint:
    name: lint
    runs-on: ${{ inputs.os }}
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
      PYTHONIOENCODING: "utf-8"

    # Exit if its a commit from Gitbook
    if: ${{ ! startsWith(github.event.head_commit.message, 'GitBook:') }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - name: Setup environment
        uses: ./.github/actions/setup_environment
        with:
          cache_version: ${{ secrets.GH_ACTIONS_CACHE_KEY }}
          python-version: ${{ inputs.python-version }}
          os: ${{ inputs.os }}

      - name: Install Dependencies
        run: |
          source $VENV
          zenml integration export-requirements --output-file requirements.txt --ignore-integration feast --ignore-integration label_studio --ignore-integration kserve --ignore-integration bentoml --ignore-integration tekton --ignore-integration airflow
          pip install -r requirements.txt
          rm requirements.txt
          pip install click~=8.0.3

      - name: Install Aspell
        run: sudo apt-get install aspell aspell-en
        if: ${{ inputs.os == 'ubuntu-latest' }} && ${{ inputs.python-version == '3.8' }}

      - name: Lint
        run: |
          source $VENV
          bash scripts/lint.sh

      - name: Spell check
        run: bash scripts/check-spelling.sh
        # Only run the spell check on ubuntu-latest and python 3.8
        if: ${{ inputs.os == 'ubuntu-latest' }} && ${{ inputs.python-version == '3.8' }}

      - name: Docstring Check
        run: bash scripts/docstring.sh
        # Only run the docstring check on ubuntu-latest and python 3.8
        if: ${{ inputs.os == 'ubuntu-latest' }} && ${{ inputs.python-version == '3.8' }}

      - name: Markdown Link Check
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'no'
          folder-path: './examples, ./docs/book, ./src'
          file-path: './README.md, ./LICENSE, ./RELEASE_NOTES.md, CODE-OF-CONDUCT.md, CONTRIBUTING.md, CLA.md, RELEASE_NOTES.md, ROADMAP.md'
          config-file: .github/workflows/markdown_check_config.json
        continue-on-error: true
        # Only run the markdown link check on ubuntu-latest and python 3.8
        if: ${{ inputs.os == 'ubuntu-latest' }} && ${{ inputs.python-version == '3.8' }}
