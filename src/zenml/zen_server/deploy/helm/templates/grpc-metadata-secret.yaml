{{- if and .Values.grpcMetadata.enabled .Values.zenml.database.url }}

{{- $ca := genCA "zenml-ca" 365 -}}
{{- $host := .Values.grpcMetadata.ingress.host | default .Values.grpcMetadata.externalHostname -}}
{{- $serverCert := genSignedCert $host nil (list $host) 365 $ca -}}
{{- $clientCert := genSignedCert "" nil nil 365 $ca }}


{{- if or .Values.grpcMetadata.tls.enabled .Values.grpcMetadata.tls.generateCerts }}

---

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.grpcMetadata.tls.secretName }}
  labels:
    {{- include "zenml.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  {{- $prevSecret := (lookup "v1" "Secret" .Release.Namespace .Values.grpcMetadata.tls.secretName) -}}
  {{- if or .Release.IsInstall (not $prevSecret) }}
  tls.crt: {{ $serverCert.Cert | b64enc | quote }}
  tls.key: {{ $serverCert.Key | b64enc | quote }}
  ca.crt: {{ $ca.Cert | b64enc | quote }}
  {{- else }}
  tls.crt: {{ index $prevSecret.data "tls.crt" }}
  tls.key: {{ index $prevSecret.data "tls.key" }}
  ca.crt: {{ index $prevSecret.data "ca.crt" }}
  {{- end }}

---

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.grpcMetadata.tls.clientSecretName }}
  labels:
    {{- include "zenml.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  {{- $prevSecret := (lookup "v1" "Secret" .Release.Namespace .Values.grpcMetadata.tls.secretName) -}}
  {{- if or .Release.IsInstall (not $prevSecret) }}
  tls.crt: {{ $serverCert.Cert | b64enc | quote }}
  tls.key: {{ $serverCert.Key | b64enc | quote }}
  ca.crt: {{ $ca.Cert | b64enc | quote }}
  {{- else }}
  tls.crt: {{ index $prevSecret.data "tls.crt" }}
  tls.key: {{ index $prevSecret.data "tls.key" }}
  ca.crt: {{ index $prevSecret.data "ca.crt" }}
  {{- end }}
{{- end }}

---

{{- $partsOne := split "/" .Values.zenml.database.url }}
{{- $database := $partsOne._3 }}
{{- $partsTwo := split "@" $partsOne._2 }}
{{- $partsThree := split ":" $partsTwo._0 }}
{{- $user := $partsThree._0 }}
{{- $password := $partsThree._1 }}
{{- $partsFour := split ":" $partsTwo._1 }}
{{- $host := $partsFour._0 }}
{{- $port := $partsFour._1 }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ include "zenml.fullname" . }}-grpc-metadata
  labels:
    {{- include "zenml.metadataLabels" . | nindent 4 }}
stringData:
  metadata-store-config.pb: |
    connection_config {
      mysql {
        host: '{{ $host }}'
        port: {{ $port | default 3306 }}
        database: '{{ $database }}'
        user: '{{ $user }}'
        password: '{{ $password }}'
        ssl_options {
          {{- if .Values.zenml.database.sslCa }}
          ca: '/certs/server-ca.pem'
          {{- end }}
          {{- if .Values.zenml.database.sslCert }}
          cert: '/certs/client-cert.pem'
          {{- end }}
          {{- if .Values.zenml.database.sslKey }}
          key: '/certs/client-key.pem'
          {{- end }}
          verify_server_cert: false
        }
        skip_db_creation: false
      }
    }
{{- if and .Values.grpcMetadata.tls.enabled (or (not .Values.grpcMetadata.ingress.enabled) (not .Values.grpcMetadata.ingress.tls.enabled)) }}
    ssl_config {
      server_key: {{ $serverCert.Key | quote }}
      server_cert: {{ $serverCert.Cert | quote }}
      custom_ca: {{ $ca.Cert | quote }}
      client_verify: false
    }
{{- end }}
    migration_options {
      enable_upgrade_migration: true
    }
{{- end }}
